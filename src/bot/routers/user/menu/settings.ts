import { Composer, InlineKeyboard, InputMediaBuilder } from "grammy";

import { BaseContext, State } from "@/utils/fsm";
import { getUserByUserId, getUserSearchSettings } from "@/db/methods/get";
import { settingsPhoto } from "@/constants/assets";
import { sexEnum } from "@/constants/enums";

import * as SettingsHandlers from "./settingsHandlers";
import { fmt, b, i } from "@grammyjs/parse-mode";

const router = new Composer<BaseContext>();
router.use(SettingsHandlers.router);

export const settingsKb = new InlineKeyboard()
  .text("üöπ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª", "change_search:gender")
  .row()
  .text("üë¶ –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç", "change_search:age")
  .row()
  .text("üèô –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥", "change_search:city")
  .row()
  .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "openStartMenu:0");

router.callbackQuery("settings", async (ctx, next) => {
  if (ctx.session.state !== undefined) return next();

  const user = await getUserByUserId(ctx.from.id);
  const searchSettings = await getUserSearchSettings(ctx.from.id);
  if (!user || !searchSettings) {
    await ctx.answerCallbackQuery("–ü–æ—Ö–æ–∂–µ –≤–∞—Å –Ω–µ—Ç...");
    return;
  }

  const searchCity = searchSettings.city ? searchSettings.city : "–ù–µ —É–∫–∞–∑–∞–Ω";
  const text = fmt`üöπ ${b}–ü–æ–ª:${b} ${i}${sexEnum[searchSettings.searchSex][1]}${i}
üë¶ ${b}–î–∏–∞–ø–∞–∑–æ–Ω:${b} ${i}${searchSettings.ageFrom}-${searchSettings.ageTo}${i}
üèô ${b}–ì–æ—Ä–æ–¥:${b} ${i}${searchCity}${i}`;

  await ctx.editMessageMedia(
    InputMediaBuilder.photo(settingsPhoto, {
      caption: text.caption,
      caption_entities: text.caption_entities,
    }),
    {
      reply_markup: settingsKb,
    },
  );

  ctx.session.message = { chat_id: ctx.chat!.id, message_id: ctx.callbackQuery.message!.message_id };
});

router.callbackQuery("change_search:age", async (ctx, next) => {
  if (ctx.session.state !== undefined) return next();

  const user = await getUserByUserId(ctx.from.id);
  if (!user || !user.form || !user.form.status || user.form.inactive) {
    await ctx.answerCallbackQuery("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞ –±–µ–∑ –∞–Ω–∫–µ—Ç—ã –∏–ª–∏ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –∞–Ω–∫–µ—Ç–æ–π!");
    return;
  }

  if (user.form.age < 16) {
    // –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ. +- 1 –æ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞ –≤ –∞–Ω–∫–µ—Ç–µ.
    await ctx.answerCallbackQuery("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –≤—ã –º–ª–∞–¥—à–µ 16...");
    return;
  }

  ctx.session.state = State.settings_age;
  await ctx.deleteMessage();

  await ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –∏–¥—Ç–∏ –ø–æ–∏—Å–∫.\n(–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π: 16)");

  ctx.session.message = undefined;
});

export default router;
